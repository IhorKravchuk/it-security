{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudTrail API Activity Alarm Template for CloudWatch Logs",
  "Parameters" : {
      "LogGroupName" : {
          "Type" : "String",
          "Default" : "CloudTrail/DefaultLogGroup",
          "Description" : "Enter CloudWatch Logs log group name. Default is CloudTrail/DefaultLogGroup"
      },
      "Environment" : {
        "Description": "Environment to deploy. You can specify staging or prod or dev",
        "Type": "String",
        "MinLength" : "2",
        "MaxLength" : "50"
      }
  },
  "Mappings" : {
    "FilterMap" : {
      "rds-change" : { "all": "{$.eventName = CopyDB* || $.eventName = CreateDB* || $.eventName = DeleteDB*}"},
      "iam-change" : { "all": "{($.eventSource = iam.amazonaws.com) && ($.eventName != Get* && $.eventName != List*)}"},
      "srt-instance" : { "all": "{($.eventName = StopInstances || $.eventName = TerminateInstances || $.eventName = RebootInstances)}"},
      "large-instance" : { "all": "{ (($.eventName = RunInstances) || ($.eventName = StartInstances)) && (($.requestParameters.instanceType = *.2xlarge) || ($.requestParameters.instanceType = *.4xlarge) || ($.requestParameters.instanceType = *.8xlarge) || ($.requestParameters.instanceType = *.10xlarge)) }"},
      "massive-operations" : { "all": "{($.eventName = StopInstances || $.eventName = TerminateInstances || $.eventName = RebootInstances || $.eventName = RunInstances || $.eventName = StartInstances)}"},
      "massive-terminations" : { "all": "{$.eventName = TerminateInstances}"},
      "detach-force-ebs" : { "all": "{$.eventName = DetachVolume && $.requestParameters.force IS TRUE}"},
      "change-critical-ebs" : { "prod": "{($.eventName = DetachVolume || $.eventName = AttachVolume || $.eventName = CreateVolume || $.eventName = DeleteVolume || $.eventName = EnableVolumeIO || $.eventName = ImportVolume || $.eventName = ModifyVolumeAttribute) && ($.requestParameters.volumeId = vol-youvol1ID || $.requestParameters.volumeId = vol-youvol2ID)}"},
      "change-secgroup" : { "all": "{$.eventName = AuthorizeSecurityGroupEgress || $.eventName = AuthorizeSecurityGroupIngress || $.eventName = AuthorizeCacheSecurityGroupIngress || $.eventName = AuthorizeClusterSecurityGroupIngress || $.eventName = AuthorizeDBSecurityGroupIngress ||$.eventName = RevokeSecurityGroupEgress || $.eventName = RevokeSecurityGroupIngress || $.eventName = RevokeCacheSecurityGroupIngress || $.eventName = RevokeClusterSecurityGroupIngress || $.eventName = RevokeDBSecurityGroupIngress}"},
      "create-delete-secgroup" : { "all": "{$.eventName = CreateSecurityGroup || $.eventName = CreateCacheSecurityGroup || $.eventName = CreateClusterSecurityGroup || $.eventName = CreateDBSecurityGroup || $.eventName = DeleteSecurityGroup || $.eventName = DeleteCacheSecurityGroup || $.eventName = DeleteClusterSecurityGroup ||  $.eventName = DeleteDBSecurityGroup}"},
      "secgroup-instance" : { "all": "{$.eventName = ModifyInstanceAttribute && $.requestParameters.groupSet.items[0].groupId = * }"},
      "route-change" : { "all": "{$.eventName = AssociateRouteTable || $.eventName = CreateRouteTable || $.eventName = DeleteRouteTable || $.eventName = DisassociateRouteTable || $.eventName = ReplaceRouteTableAssociation}"},
      "create-delete-vpc" : { "all": "{$.eventName = CreateVpc || $.eventName = DeleteVpc}"},
      "netacl-change" : { "all": "{($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation)}"},
      "cloudtrail-change" : { "all": "{$.eventSource = cloudtrail.amazonaws.com && ($.eventName != Get* && $.eventName != List* && $.eventName != Lookup* && $.eventName != Describe*)}"},
      "cloudformation-change" : { "all": "{$.eventSource = cloudformation.amazonaws.com && ($.eventName != Validate* && $.eventName != Describe* && $.eventName != List* && $.eventName != Get*)}"},
      "root-access" : { "all": "{$.userIdentity.type = Root}"},
      "unauthorised" : {"all": "{($.eventName = ConsoleLogin && $.errorMessage = Failed*) || $.errorCode = *UnauthorizedOperation || $.errorCode = AccessDenied*}"},
      "igw-change" : { "all": "{$.eventName = AttachInternetGateway || $.eventName = CreateInternetGateway || $.eventName = DeleteInternetGateway || $.eventName = DetachInternetGateway || $.eventName = AttachVpnGateway || $.eventName = CreateVpnGateway || $.eventName = DeleteVpnGateway || $.eventName = DetachVpnGateway}"},
      "vpc-flow-logs" : { "all": "{$.eventName = CreateFlowLogs || $.eventName = DeleteFlowLogs}"},
      "critical-instance" : { "prod": "{$.requestParameters.instanceId = i-instance1ID || $.requestParameters.instanceId = i-instance2ID || $.requestParameters.instanceId = i-instance3ID || $.requestParameters.instanceId = i-instance4ID || $.requestParameters.instanceId = i-instance5ID || $.requestParameters.instanceId = i-instance6ID|| $.requestParameters.instanceId = i-instance7ID}"},
      "eip-change" : { "all": "{$.eventName = AssociateAddress || $.eventName = DisassociateAddress || $.eventName = MoveAddressToVpc || $.eventName = ReleaseAddress }"},
      "net-access" : { "all": "{$.sourceIPAddress != 111.222.3* && $.sourceIPAddress != 111.222.4* && $.sourceIPAddress != cloud* && $.sourceIPAddress != AWS* && $.sourceIPAddress != 11.22.33.00 && $.sourceIPAddress != 11.22.33.01 }"},
      "test-change" : { "all": "value" },
      "test-change" : { "staging": "value",  "prod" : "value", "dev": "value" }
    }
  },
  "Resources" : {
      "RDSChangesMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern":  { "Fn::FindInMap" : [ "FilterMap", "rds-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "RDSChangesEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "RDSChangesAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "RDSChanges" ]]},
          "AlarmDescription" : "Alarms when any changes are made on the RDS databases",
          "AlarmActions" : [ { "Ref" : "InfosecEmailTopic" }],
          "MetricName" : "RDSChangesEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
	  	"IAMChangesMetricFilter": {
	  		"Type": "AWS::Logs::MetricFilter",
	  		"Properties": {
	  			"LogGroupName": { "Ref": "LogGroupName"},
	  			"FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "iam-change", "all"]},
	  			"MetricTransformations": [
	  				{
	  					"MetricNamespace": "CloudTrailMetrics",
	  					"MetricName": "IAMEventCount",
	  					"MetricValue": "1"
	  				}
	  			]
	  		}
	  	},
      "IAMChangesAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"CloudtrailIAMChanges"]]},
          "AlarmDescription" : "Alarms when any changes are made to the Identity & Access Management service",
          "AlarmActions" : [{ "Ref" : "InfosecEmailTopic" }],
          "MetricName" : "IAMEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "SRTInstancesMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "srt-instance", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "SRTInstancesEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "SRTInstancesAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"SRTInstances"]]},
          "AlarmDescription" : "Alarms when an Instance is Stopped, Rebooted or Terminated",
          "AlarmActions" : [{"Ref": "DevOpsEmailTopic" }],
          "MetricName" : "SRTInstancesEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "LargeInstanceMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "large-instance", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "LargeInstanceEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "LargeInstanceAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"LargeInstance"]]},
          "AlarmDescription" : "Alarms when a large Instance is created",
          "AlarmActions" : [{"Ref": "DevOpsEmailTopic" }],
          "MetricName" : "LargeInstanceEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "MassiveOptMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "massive-operations", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "MassiveOptEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "MassiveOptAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"MassiveOperations"]]},
          "AlarmDescription" : "Alarms when a large number of operations are performed in small time period",
          "AlarmActions" : [ {"Ref": "DevOpsSMSTopic"}, {"Ref": "InfosecSMSTopic"}, { "Ref" : "InfosecEmailTopic" }],
          "MetricName" : "MassiveOptEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "10"
        }
      },
      "MassiveTerminationMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "massive-terminations", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "MassiveTerminationEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "MassiveTerminationAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"MassiveTermination"]]},
          "AlarmDescription" : "Alarms when a large number of Instances are being terminated ",
          "AlarmActions" : [{"Ref": "InfosecSMSTopic" }, { "Ref" : "InfosecEmailTopic" }, {"Ref": "DevOpsSMSTopic"}],
          "MetricName" : "MassiveTerminationEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "60",
          "Statistic" : "Sum",
          "Threshold" : "10"
        }
      },
      "EBSForceDetachMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "detach-force-ebs", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "VolumeForceDetachEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "EBSForceDetachAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"EBSForceDetach"]]},
          "AlarmDescription" : "Alarms when a volume is force detached from an Instance",
          "AlarmActions" : [{"Ref": "DevOpsEmailTopic" }],
          "MetricName" : "VolumeForceDetachEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "EBSChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "change-critical-ebs", "prod"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "EBSEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "EBSChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"EBSChange"]]},
          "AlarmDescription" : "Alarms when a change is made regarding critical/sensetive EBS",
          "AlarmActions" : [{"Ref": "InfosecSMSTopic" }, { "Ref" : "InfosecEmailTopic" }, {"Ref": "DevOpsSMSTopic"}],
          "MetricName" : "EBSEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "SecurityGroupChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "change-secgroup", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "SecurityGroupChangeEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "SecurityGroupChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"SecurityGroupChange"]]},
          "AlarmDescription" : "Alarms when changes are made to the security groups",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}],
          "MetricName" : "SecurityGroupChangeEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "SecurityGroupCreateDelMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "create-delete-secgroup", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "SecurityGroupCreateDelEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "SecurityGroupCreateDelAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"SecurityGroupCreateDel"]]},
          "AlarmDescription" : "Alarms when a Security Group is created or deleted",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}],
          "MetricName" : "SecurityGroupCreateDelEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "InstanceSecGroupChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "secgroup-instance", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "InstanceSecGroupChangeEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "InstanceSecGroupChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} ,"InstanceSecGroupChange"]]},
          "AlarmDescription" : "Alarms when instance security group associations changed",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}],
          "MetricName" : "InstanceSecGroupChangeEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "RouteTableChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "route-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "RouteTableEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "RouteTableChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "RouteTableChange"]]},
          "AlarmDescription" : "Alarms when a change is made to the Route table",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}, {"Ref": "DevOpsEmailTopic"}],
          "MetricName" : "RouteTableEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "VPCCreateDelMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "create-delete-vpc", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "VPCCreateDelEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "VPCCreateDelAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "VPCCreateDel"]]},
          "AlarmDescription" : "Alarms when a Virtual Private Cloud is created and deleted",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}, {"Ref": "DevOpsEmailTopic"}],
          "MetricName" : "VPCCreateDelEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "NetworkACLChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "netacl-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "NetworkACLEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "NetworkACLChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "NetworkACLChange"]]},
          "AlarmDescription" : "Alarms when changes are made to the Network Access Control List",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}, {"Ref": "DevOpsEmailTopic"}],
          "MetricName" : "NetworkACLEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "CloudtrailChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "cloudtrail-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "CloudtrailEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "CloudtrailChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "CloudtrailChange"]]},
          "AlarmDescription" : "Alarms when changes are made to the Cloudtrail",
          "AlarmActions" : [{"Ref": "InfosecSMSTopic"}, { "Ref" : "InfosecEmailTopic" }],
          "MetricName" : "CloudtrailEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "CloudFormationChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "cloudformation-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "CloudFormationEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "CloudFormationChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "CloudFormationChange"]]},
          "AlarmDescription" : "Alarms when changes are made to the Cloud Formation",
          "AlarmActions" : [{"Ref": "DevOpsEmailTopic"}, {"Ref": "InfosecEmailTopic"}],
          "MetricName" : "CloudFormationEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "RootAccessMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "root-access", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "RootAccessEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "RootAccessAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "RootAccess"]]},
          "AlarmDescription" : "Alarms when the Root account is used",
          "AlarmActions" : [{ "Ref" : "InfosecSMSTopic" }, { "Ref" : "InfosecEmailTopic" }],
          "MetricName" : "RootAccessEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "UnauthorisedCallAccessMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "unauthorised", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "UnauthorisedAccess-CallEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "UnauthorisedCallAccessAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "UnauthorisedCallAccess"]]},
          "AlarmDescription" : "Alarms when an unauthorised call is made or a failed login attempt is made ",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}],
          "MetricName" : "UnauthorisedAccess-CallEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "InternetGWVPNMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "igw-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "IGW-VPNEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "InternetGWVPNAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "InternetGWVPN"]]},
          "AlarmDescription" : "Alarms when changes are made to the Internet Gateways and VPNs",
          "AlarmActions" : [{"Ref": "InfosecSMSTopic"}, { "Ref" : "InfosecEmailTopic" }, {"Ref": "DevOpsSMSTopic"}],
          "MetricName" : "IGW-VPNEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "VPCTrafficFlowCreateDelMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "vpc-flow-logs", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "VPCTrafficFlowEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "VPCTrafficFlowCreateDelAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "VPCTrafficFlowCreateDel"]]},
          "AlarmDescription" : "Alarms when VPC traffic flow is created or deleted",
          "AlarmActions" : [{"Ref": "InfosecEmailTopic"}],
          "MetricName" : "VPCTrafficFlowEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "CriticalInstanceOneMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "critical-instance", "prod"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "CriticalOneEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "CriticalInstanceOneAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "CriticalInstanceOne"]]},
          "AlarmDescription" : "Alarms when any operations are performed on ET-testInstance",
          "AlarmActions" : [{ "Ref" : "InfosecEmailTopic" }, {"Ref": "DevOpsEmailTopic"}],
          "MetricName" : "CriticalOneEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "ElasticIPChangeMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "eip-change", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "ElasticIPEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "ElasticIPChangeAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "ElasticIPChange"]]},
          "AlarmDescription" : "Alarms when any operations are performed on Elastic IPs or Auto public IP",
          "AlarmActions" : [{ "Ref" : "InfosecEmailTopic" }, {"Ref": "DevOpsEmailTopic"}],
          "MetricName" : "ElasticIPEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "NetworkIPAccessMetricFilter": {
        "Type": "AWS::Logs::MetricFilter",
        "Properties": {
          "LogGroupName": { "Ref": "LogGroupName"},
          "FilterPattern": { "Fn::FindInMap" : [ "FilterMap", "net-access", "all"]},
          "MetricTransformations": [
            {
              "MetricNamespace": "CloudTrailMetrics",
              "MetricName": "NetworkIPAccessEventCount",
              "MetricValue": "1"
            }
          ]
        }
      },
      "NetworkIPAccessAlarm": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmName" : { "Fn::Join" : ["--", [ {"Ref": "Environment"} , "NetworkIPAccess"]]},
          "AlarmDescription" : "Alarms when  Any access to AWS not from RP network block (111.222.32.0/20), NAT Gateways or Cloudformation",

          "MetricName" : "NetworkIPAccessEventCount",
          "Namespace" : "CloudTrailMetrics",
          "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
          "EvaluationPeriods" : "1",
          "Period" : "300",
          "Statistic" : "Sum",
          "Threshold" : "1"
        }
      },
      "InfosecEmailTopic": {
        "Type" : "AWS::SNS::Topic",
        "Properties": {
          "DisplayName" : "Infosec-Email",
          "Subscription": [
            {
              "Endpoint": "infosec@ChangeMe.com",
              "Protocol": "email"
            }
          ],
          "TopicName" : "Infosec-Email-Notification"
        }
      },
      "DevOpsEmailTopic": {
        "Type" : "AWS::SNS::Topic",
        "Properties": {
          "DisplayName" : "DevOps-Email",
          "Subscription": [
            {
              "Endpoint": "devops@ChangeMe.com",
              "Protocol": "email"
            }
          ],
          "TopicName" : "DevOps-Email-Notification"
        }
      },
      "InfosecSMSTopic": {
        "Type" : "AWS::SNS::Topic",
        "Properties": {
          "DisplayName" : "Infosec-SMS",
          "TopicName" : "Infosec-SMS-Critical"
        }
      },
      "DevOpsSMSTopic": {
        "Type" : "AWS::SNS::Topic",
        "Properties": {
          "DisplayName" : "DevOps-SMS",
          "TopicName" : "DevOps-SMS-Critical"
        }
      }
	}
}
